[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "jobserver"
description = "jobserver"
readme = "README.md"
authors = [{name = "OpenSAFELY", email = "tech@opensafely.org"}]
license = {file = "LICENSE"}
classifiers = [
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)"
]
requires-python = ">=3.11"
dynamic = ["version"]

[tool.setuptools.packages.find]
exclude = ["tests*"]  # exclude packages matching these glob patterns (empty by default)

[tool.black]
extend-exclude = '''
(
  /(
      assets
    | outputs
    | snippets
    | static
  )/
)
'''

[tool.coverage.run]
branch = true
dynamic_context = "test_function"
omit = [
  "*/migrations/*",
  "applications/management/commands/fix_truncated_data.py",
  "jobserver/asgi.py",
  "jobserver/jobs/*",
  "interactive/management/commands/create_testing_analysis.py",
  "interactive/management/commands/osi_release.py",
  "interactive/management/commands/osi_run.py",
  "interactive/management/commands/osi_run_and_release.py",
  "jobserver/management/commands/count_rows.py",
  "jobserver/management/commands/ensure_admins.py",
  "jobserver/management/commands/ensure_backends.py",
  "jobserver/management/commands/get_all_projects.py",
  "jobserver/management/commands/get_transitional_projects.py",
  "jobserver/management/commands/inflate_release_files.py",
  "jobserver/management/commands/list_missing_repos.py",
  "jobserver/management/commands/publish_files.py",
  "jobserver/management/commands/release.py",
  "jobserver/settings.py",
  "jobserver/wsgi.py",
]
source = [
  "applications",
  "interactive",
  "jobserver",
  "redirects",
  "services",
  "staff",
  "tests",
]

[tool.coverage.report]
fail_under = 100
show_missing = true
skip_covered = true

[tool.coverage.html]
show_contexts = true

[tool.pytest.ini_options]
addopts = "--disable-network --tb=native --no-migrations --ignore=./release-hatch"
DJANGO_SETTINGS_MODULE = "jobserver.settings"
env = [
  "GITHUB_TOKEN=empty",
  "PASSWORD_HASHERS=django.contrib.auth.hashers.MD5PasswordHasher",
  "SECRET_KEY=12345",
  "SOCIAL_AUTH_GITHUB_KEY=test",
  "SOCIAL_AUTH_GITHUB_SECRET=test",
]
filterwarnings = [
    "error",
    "ignore::pytest.PytestUnraisableExceptionWarning:",
    "ignore:distutils Version classes are deprecated:DeprecationWarning:pytest_freezegun",
    "ignore:Call to deprecated method __init__:DeprecationWarning:",
    "ignore:path is deprecated.:DeprecationWarning:opensafely",
]
markers = [
  "slow_test: mark test as being slow running",
  "verification: tests that verify fakes",
]

[tool.ruff]
line-length = 88
exclude = [
  ".direnv",
  ".git",
  ".github",
  ".ipynb_checkpoints",
  ".pytest_cache",
  ".venv",
  "__pycache__",
  "assets",
  "coverage",
  "docker",
  "docs",
  "htmlcov",
  "node_modules",
  "release-hatch",
  "releases",
  "snippets",
  "static",
  "staticfiles",
  "uploads",
  "venv",
]
extend-select = [
  "A",  # flake8-builtins
  "I",  # isort
  "INP",  # flake8-no-pep420
  "ISC",  # flake8-implicit-str-concat
  "UP",  # pyupgrade
  "W",  # pycodestyle warning
]
extend-ignore = [
  "E501",
  "E731",
]

[tool.ruff.isort]
lines-after-imports = 2

[tool.ruff.per-file-ignores]
"gunicorn.conf.py" = ["INP001"]
"manage.py" = ["INP001"]
