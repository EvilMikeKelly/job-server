# Generated by Django 4.1.10 on 2023-07-24 08:01
from django.db import migrations
from furl import furl


def _build_url(project):
    """
    Build up a URL for the given Project

    We can't use get_absolute_url() inside a migration because frozen models
    don't keep their methods.  However, even if we could, it would rely on
    reverse() which is too brittle for this migration.  We need to build a URL
    in the form /<org_slug>/<project_slug>/ for the given project, regardless
    of that being a valid route for the project so we can use it to refer to
    redirects for the given project.

    We're not create a furl object in the typical way here with either / or
    updating path.segments because furl won't add leading and trailing forwards
    slashes.  Those are meaningful to our redirects middleware so it can
    correctly capture a URL which needs to redirect.  However, we're still
    making use of it so that it normalises the path for us as an extra bit of
    safety.

    """
    return str(furl(f"/{project.org.slug}/{project.slug}/"))


def add_redirects_to_remove_org_from_orgs(apps, schema_editor):
    Project = apps.get_model("jobserver", "Project")
    User = apps.get_model("jobserver", "User")

    maybe_george = User.objects.filter(username="ghickman").first()
    if maybe_george is None:
        maybe_george = User.objects.order_by("date_joined").first()

    for project in Project.objects.select_related("org"):
        old_url = _build_url(project)
        project.redirects.create(old_url=old_url, created_by=maybe_george)


def remove_redirects_for_orgs(apps, schema_editor):
    Project = apps.get_model("jobserver", "Project")

    for project in Project.objects.select_related("org"):
        old_url = _build_url(project)
        project.redirects.filter(old_url=old_url).delete()


class Migration(migrations.Migration):
    dependencies = [
        ("jobserver", "0002_ensure_project_slugs_have_a_value"),
    ]

    operations = [
        migrations.RunPython(
            add_redirects_to_remove_org_from_orgs,
            reverse_code=remove_redirects_for_orgs,
        )
    ]
