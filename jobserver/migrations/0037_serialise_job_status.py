# Generated by Django 3.1.2 on 2020-12-04 15:14

from django.db import migrations


def remove_runner_status(apps, schema_editor):
    Job = apps.get_model("jobserver", "Job")

    # use jobs we know job-runner didn't create
    Job.objects.filter(identifier__endswith="-manually-set").update(runner_status="")


def set_runner_status(apps, schema_editor):
    Job = apps.get_model("jobserver", "Job")

    STATE_SUCCESS = 0
    STATE_DEPENDENCY_NOT_FINISHED = 6
    STATE_DEPENDENCY_RUNNING = 8

    def is_failed(job):
        if not is_finished(job):
            return False

        non_failure_statuses = [
            STATE_DEPENDENCY_NOT_FINISHED,
            STATE_DEPENDENCY_RUNNING,
            STATE_SUCCESS,
        ]

        return job.status_code not in non_failure_statuses

    def is_finished(job):
        # no status code set
        return (
            job.started and job.status_code is not None and job.completed_at is not None
        )

    def is_pending(job):
        if not job.started:
            return True

        pending_states = [
            STATE_DEPENDENCY_NOT_FINISHED,
            STATE_DEPENDENCY_RUNNING,
        ]

        if job.status_code in pending_states:
            return True

        return False

    def is_running(job):
        pending_states = [
            STATE_DEPENDENCY_NOT_FINISHED,
            STATE_DEPENDENCY_RUNNING,
        ]
        if job.status_code and job.status_code not in pending_states:
            return False

        return job.started and job.completed_at is None

    def is_succeeded(job):
        if not is_finished(job):
            return False

        return job.status_code == 0

    def status(job):
        if is_succeeded(job):
            return "Succeeded"

        if is_failed(job):
            return "Failed"

        if is_running(job):
            return "Running"

        if is_pending(job):
            return "Pending"

        return "Unknown"

    # use jobs we know job-runner didn't create
    for job in Job.objects.filter(identifier__endswith="-manually-set"):
        job.runner_status = status(job)
        job.save()


class Migration(migrations.Migration):

    dependencies = [
        ("jobserver", "0036_make_job_identifier_unique"),
    ]

    operations = [
        migrations.RunPython(set_runner_status, reverse_code=remove_runner_status)
    ]
