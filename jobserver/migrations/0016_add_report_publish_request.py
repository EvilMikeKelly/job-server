# Generated by Django 4.1.2 on 2023-02-01 14:36

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("jobserver", "0015_add_release_file_publish_request"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="ReportPublishRequest",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("approved_at", models.DateTimeField(null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "approved_by",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="report_publish_requests_approved",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="report_publish_requests_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "release_file_publish_request",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="report_publish_request",
                        to="jobserver.releasefilepublishrequest",
                    ),
                ),
                (
                    "report",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="publish_request",
                        to="jobserver.report",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="report_publish_requests_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="reportpublishrequest",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("approved_at__isnull", True), ("approved_by__isnull", True)
                    ),
                    models.Q(
                        ("approved_at__isnull", False), ("approved_by__isnull", False)
                    ),
                    _connector="OR",
                ),
                name="jobserver_reportpublishrequest_both_approved_at_and_approved_by_set",
            ),
        ),
        migrations.AddConstraint(
            model_name="reportpublishrequest",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("created_at__isnull", True), ("created_by__isnull", True)
                    ),
                    models.Q(
                        ("created_at__isnull", False), ("created_by__isnull", False)
                    ),
                    _connector="OR",
                ),
                name="jobserver_reportpublishrequest_both_created_at_and_created_by_set",
            ),
        ),
        migrations.AddConstraint(
            model_name="reportpublishrequest",
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ("updated_at__isnull", True), ("updated_by__isnull", True)
                    ),
                    models.Q(
                        ("updated_at__isnull", False), ("updated_by__isnull", False)
                    ),
                    _connector="OR",
                ),
                name="jobserver_reportpublishrequest_both_updated_at_and_updated_by_set",
            ),
        ),
    ]
